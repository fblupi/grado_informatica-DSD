/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */

#include "msg.h"


void
calculaprog_1(char *host)
{
	CLIENT *clnt;
	int  *result_1;
	int calcula_1_arg1;
	int calcula_1_arg2;
	int calcula_1_arg3;

	printf("¿Qué operación deseas realizar?\n1.- Sumar\n2.- Restar\n3.- Multiplicar\n4.- Dividir\nOperación: ");
	scanf("%d",&calcula_1_arg1);
	while(calcula_1_arg1<1 || calcula_1_arg1>4) {
		printf("Error, operación incorrecta.\n");
		printf("¿Qué operación deseas realizar?\n1.- Sumar\n2.- Restar\n3.- Multiplicar\n4.- Dividir\nOperación: ");
		scanf("%d",&calcula_1_arg1);
	}

	printf("Primer número: ");
	scanf("%d",&calcula_1_arg2);

	printf("Segundo número: ");
	scanf("%d",&calcula_1_arg3);

	while(calcula_1_arg1==4 && calcula_1_arg3==0) {
		printf("Error, no se puede dividir entre 0.\n");
		printf("Segundo número: ");
		canf("%d",&calcula_1_arg3);
	}

#ifndef	DEBUG
	clnt = clnt_create (host, CALCULAPROG, OPERACIONES, "udp");
	if (clnt == NULL) {
		clnt_pcreateerror (host);
		exit (1);
	}
#endif	/* DEBUG */

	result_1 = calcula_1(calcula_1_arg1, calcula_1_arg2, calcula_1_arg3, clnt);
	if (result_1 == (int *) NULL) {
		clnt_perror (clnt, "call failed");
	}

	printf("Resultado: %d\n",*result_1);

#ifndef	DEBUG
	clnt_destroy (clnt);
#endif	 /* DEBUG */
}


int
main (int argc, char *argv[])
{
	char *host;

	if (argc < 2) {
		printf ("usage: %s server_host\n", argv[0]);
		exit (1);
	}
	host = argv[1];
	calculaprog_1 (host);
exit (0);
}
